//---Remove Duplicates from the sorted linked list--//
#include<iostream>
using namespace std;
class Node{
  public:
  int data;
  Node*next;
  Node(){
    this->data=0;
    this->next=NULL;
  }
  Node(int data){
    this->data=data;
    this->next=NULL;
  }
};
void print(Node*&head){
  Node*temp=head;
  while(temp!=NULL){
    cout<<temp->data<<" ";
    temp=temp->next;
  }
}
void removeDuplicates(Node*&head){
    //agr linked list hi empty hh toh
    if(head==NULL){
      cout<<"LL is empty"<<endl;
      return ;
    }
    //agr single elemnt hh toh
    if(head->next==NULL){
      cout<<"Single Node in the linked list"<<endl;
      return;
      }
    //agr ekk sey jada node hh toh
    Node*curr=head;
    while(curr!=NULL){
      if((curr->next!=NULL) && (curr->data==curr->next->data)){
       //equal
       Node*temp=curr->next;
       curr->next=curr->next->next;
       //delete node
       temp->next=NULL;
       delete temp;
      }
      else{
        //not equal
        curr=curr->next;
    }
}
}


int main(){
  Node*first=new Node(1);
  Node*second=new Node(2);
  Node*third=new Node(2);
  Node*fourth=new Node(3);
Node*fifth=new Node(4);
Node*sixth=new Node(4);
Node*head=first;
first->next=second;
second->next=third;
third->next=fourth;
fourth->next=fifth;
fifth->next=sixth; 
sixth->next=NULL;
print(head);
cout<<endl;
removeDuplicates(head);
cout<<"New linked list"<<endl;
removeDuplicates(head);
print(head);
  return 0;
}
