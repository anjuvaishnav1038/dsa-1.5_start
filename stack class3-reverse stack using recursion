// indert target in the sorted stack--//
#include<iostream>
#include<stack>
using namespace std;
void insertSorted(stack<int>&s,int target){
  //jbb bhi hmm top ko check krte hh toh hmesa makesure to check khi hmara stck empty toh nhi hh
  //base case
  if(s.empty()){
    s.push(target);
    return;
  }
  if(s.top()>=target){
    s.push(target);
    return;
  }
  //ekk case solve krdo
  int topElement=s.top();
  s.pop();
  //recursive call
  insertSorted(s,target);
  //backtrack
  s.push(topElement);
}
void sortStack(stack<int>&s){
  //base case
  if(s.empty())
  return;
  int topElement=s.top();
  s.pop();
  sortStack(s);
  insertSorted(s,topElement);
}
int main(){
  stack<int>s;
  s.push(7);
  s.push(11);
  s.push(3);
  s.push(5);
  s.push(9);
  sortStack(s);
  while(!s.empty()){
    cout<<s.top()<<" ";
    s.pop();
  }
  cout<<endl;

  return 0;
}
