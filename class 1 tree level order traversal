#include<iostream>
#include<queue>
using namespace std;
class Node{
  public:
  int data;
  Node*left;
  Node*right;
  Node(int data){
      this->data=data;
      this->left=NULL;
      this->right=NULL;
  }
};
Node*BuildTree(){
    //root node bnalo
    int data;
    cin>>data;
    if(data==-1){
        return NULL;
    }
    Node*root=new Node(data);
   cout<<"Enter the data for the left node"<<data<< endl;
    root->left=BuildTree();
    cout<<"Enter the data for the right node "<<data<<endl;
    root->right=BuildTree();
   
    return root;
}
void LevelOrderTraversal(Node*root){
    //intially queue bnalo
   queue<Node*>q;
   //queue mey node dall do
   q.push(root);
   //abb 3 steps or hh
   while(!q.empty()){
       //stepA
       Node*temp=q.front();
       //step B
       q.pop();
       //step C
       cout<<temp->data<<" ";
       //step D
       if(temp->left){
           q.push(temp->left);
       }
       //Step E
       if(temp->right){
           q.push(temp->right);
       }
       
   }
}
int main(){
    Node*root=NULL;
    root=BuildTree();
    LevelOrderTraversal(root);
    return 0;
}
