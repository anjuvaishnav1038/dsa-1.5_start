//--- Push and Pop operartion in the circular QUEUE---//
#include<iostream>
using namespace std;
class CircularQueue{
public:
int*arr;
int front;
int rear;
int size;
CircularQueue(int size){
  this->size=size;
  this->arr=new int[size];
  this->front=-1;
  this->rear=-1
}
//pushing elemnt in the circular queue
void push(int data){
  //TODO:Add one more condition in the Queue full condition
 //case1:Queue full
  if(front==0 && rear=size-1){
    cout<<"Q is Full cannot insert"<<endl;
  }
//case2:single element or First Elemnt
else if(front==-1){
  front=0;
  rear=0;
  arr[rear]=data;
}
//Case3:Circular nature
else if(rear==size-1 && front!=0){
  rear=0;
  arr[rear]=data;
}
//case4:normal or default case
else{
  rear++;
  arr[rear]=data;
}
}
//pop in the circular Queue
void pop(){
  //empty check
  if(front==-1 && rear==-1){
    cout<<"Queue is empty cannot pop"<<endl;
  }
  //single elemnt check
  else if(front==rear){
    arr[front]=-1;
    front=-1;
    rear=-1;
  }
  //circular nature
  else if(front==size-1){
    front=0;
  }
  //normal case
  else {
    front++;
  }
}
};
int main(){

  return 0;
}
