//--finding starting point of the loop-//
#include<iostream>
using namespace std;
class Node{
  public:
  int data;
  Node*next;
  Node(){
    this->data=0;
    this->next=NULL;
  }
  Node(int data){
    this->data=data;
    this->next=NULL;
  }
};
void print(Node*&head){
  Node*temp=head;
  while(temp!=NULL){
    cout<<temp->data<<" ";
    temp=temp->next;
  }
}
Node* startingPointLoop(Node*&head){
  if(head==NULL){
    cout<<"Linked list is empty"<<endl;
    return NULL;
  }
  Node*slow=head;
  Node*fast=head;
  while(fast!=NULL&&slow!=NULL){
    fast=fast->next;
    if(fast!=NULL){
      fast=fast->next;
      slow=slow->next;
    }
    if(slow==fast)
 {
  slow=head;
  break;
 }
  }
  while(slow!=fast){
  slow=slow->next;
  fast=fast->next;
  }
return slow;
}
int main(){
  Node*first=new Node(10);
  Node*second=new Node(20);
  Node*third=new Node(30);
  Node*fourth=new Node(40);
  Node*fifth=new Node(50);
  Node*sixth=new Node(60);
  Node*seventh=new Node(70);
  Node*eight=new Node(80);
  Node*head=first;
  first->next=second;
  second->next=third;
  third->next=fourth;
  fourth->next=fifth;
  fifth->next=sixth;
  sixth->next=seventh;
  seventh->next=eight;
  eight->next=sixth;
 cout<<"starting point of the Loop "<<startingPointLoop(head)->data;
  return 0;
  }

