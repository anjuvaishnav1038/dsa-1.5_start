//sort An array-LEETCODE
class Solution {
public:
void mergeInplace(vector<int>&nums,int mid,int start,int end){
 int total_len=end-start+1;
 int gap=(total_len/2)+(total_len%2);
 while(gap>0){
     int i=start;
     int j=start+gap;
     while(j<=end){
         if(nums[i]>nums[j]){
             swap(nums[i],nums[j]);
         }
         ++i;
         ++j;
     }
     gap=gap<=1?0:(gap/2)+(gap%2);
 }

}
    void mergeSort(vector<int>&nums,int start,int end){
        if(start==end){
            return;
        }
        int mid=(start+end)>>1;
        //left array
        mergeSort(nums,start,mid);
        //right array
        mergeSort(nums,mid+1,end);
        //merging
        mergeInplace(nums,mid,start,end);
    }
    vector<int> sortArray(vector<int>& nums) {
        mergeSort(nums,0,nums.size()-1);
        return nums;   }
};
