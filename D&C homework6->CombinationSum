//Combination Sum LEETCODE
class Solution {
public:
    void combination_Helper(vector<int>& candidates, int target,vector<int>&v, vector<vector<int>>&ans,int index){
        //base case
        if(target==0){
        ans.push_back(v);
        return;
        }
        if(target<0){
            return;
        }

        for(int i=index;i<candidates.size();i++){
            v.push_back(candidates[i]);
            //Recursive call
           combination_Helper(candidates,target-candidates[i],v,ans,i);
            //backtrace
            v.pop_back();
        }
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
      int index=0;
      vector<vector<int>>ans;
      vector<int>v;
      combination_Helper(candidates,target,v,ans,index);
      return ans;
    }
};
